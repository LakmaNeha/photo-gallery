{"version":3,"sources":["firebase_config.js","comps/Delete.js","hooks/useFirestore.js","comps/ImgeGrid.js","comps/Modal.js","comps/ScrollButton.js","comps/Login.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/DarkMode/theme.js","comps/DarkMode/GlobalStyles.js","comps/DarkMode/Toggle.js","App.js","hooks/useDarkMode.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","galleryStorage","storage","db","firestore","timestamp","FieldValue","serverTimestamp","auth","Delete","docId","setDocId","delUrl","setDelUrl","collection","doc","delete","refFromURL","useFirestore","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","push","data","id","ImgeGrid","setSelectedImage","useAuthState","user","className","map","motion","div","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","e","stopPropagation","Modal","selectedImage","target","classList","contains","y","ScrollButton","visible","setVisible","window","addEventListener","scrolled","document","documentElement","scrollTop","scrollTo","top","behavior","style","display","googleProvider","GoogleAuthProvider","Login","error","setError","signInWithPopup","then","res","console","log","uid","set","displayName","photoURL","email","catch","err","Title","signOut","a","Grid","container","justify","alignItems","letterSpacing","color","fontWeight","textAlign","marginBottom","marginTop","fontSize","useStorage","uploadedInput","progress","setProgress","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","getDownloadURL","createdAt","add","ProgressBar","setUploadedInput","width","UploadForm","typeOfFilesAccepted","type","onChange","event","selected","files","includes","lightTheme","body","text","toggleBorder","background","darkTheme","GlobalStyles","createGlobalStyle","theme","Button","styled","button","Toggle","toggleTheme","App","setTheme","mountedComponent","setMountedComponent","setMode","mode","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.883b9bfd.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDFn_vwdX1_csteYbCmU-iatWbj8FXI-no\",\n    authDomain: \"asthetic-gallery.firebaseapp.com\",\n    projectId: \"asthetic-gallery\",\n    storageBucket: \"asthetic-gallery.appspot.com\",\n    messagingSenderId: \"676145813989\",\n    appId: \"1:676145813989:web:4a3d0b69cde0cbe937370c\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const galleryStorage =firebase.storage();\n  const db = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n  const auth = firebase.auth();\n\n  export { galleryStorage, db , timestamp, auth};","import React from 'react';\nimport { galleryStorage , db } from '../firebase_config';\nconst  Delete = ({docId, setDocId, delUrl, setDelUrl}) => {\n\n    db.collection(\"images\").doc(docId).delete();\n    setDocId(null);\n    let pictureRef = galleryStorage.refFromURL(delUrl);\n   \n    pictureRef.delete()\n\n    setDelUrl(null);\n\n    return (\n\n        <div></div>\n\n    )\n        \n}\n\nexport default Delete;\n\n","import { db } from '../firebase_config';\nimport {useState , useEffect} from 'react';\n\nconst useFirestore = (collection) =>{\n\n    const [docs, setDocs] = useState([]);\n\n    useEffect(()=> {\n        const unsub = db.collection(collection)\n        .orderBy('createdAt','desc')\n        .onSnapshot((snap) => {\n            let documents = [];\n            snap.forEach(doc => {\n                documents.push({...doc.data(),id: doc.id});\n            });\n            setDocs(documents);\n        });\n\n        return()=> unsub();\n    },[collection ])\n\n    return {docs};\n}\n\n\nexport default useFirestore;","import React from 'react'\nimport useFirestore from '../hooks/useFirestore';\nimport {motion} from 'framer-motion'\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../firebase_config';\n\nconst ImgeGrid = ({setSelectedImage, setDocId, setDelUrl }) => {\n\n    const [user] = useAuthState(auth);\n\n    const { docs } = useFirestore('images');\n    \n    return (\n        <div className=\"img-grid\">\n            { docs && docs.map(doc => (\n                <motion.div className= \"img-wrap \" key={doc.id}\n                layout\n                whileHover={{opacity: 1}}\n                onClick={()=> setSelectedImage(doc.url)}>\n                   \n                    <motion.img src={doc.url} alt=\"uploaded pic\" \n                    initial={{opacity:0}}\n                    animate={{opacity:1}}\n                    transition={{delay:0.5}}/>\n                \n                {user && <button className=\"zindex \" >\n                <BsFillTrashFill onClick={(e) => \n                { setDocId(doc.id);\n                    setDelUrl(doc.url);\n                  e.stopPropagation( );\n                }} />\n                </button>}\n\n                </motion.div>\n\n            ))}\n\n        </div>\n    )\n}\n\nexport default ImgeGrid;\n","import React from 'react';\nimport {motion} from 'framer-motion';\n\n\nconst  Modal = ({selectedImage, setSelectedImage}) => {\n\n    \n    const handleClick = (e) => {\n        if(e.target.classList.contains('backdrop')){\n\n            setSelectedImage(null);\n\n        }\n       \n\n    }\n\n    return (\n        <motion.div className=\"backdrop\" onClick={handleClick} \n        initial={{opacity: 0 }}\n        animate={{opacity: 1 }}\n        >\n           <motion.img src={selectedImage} alt=\"enlarged pic\"\n            initial={{y: \"-100vh\"}}\n            animate={{ y: 0 }}\n            />   \n        </motion.div>\n    )\n}\n\nexport default Modal;\n","import React,{useState} from 'react';\nimport {FaArrowCircleUp} from 'react-icons/fa';\n\nfunction ScrollButton() {\n\n    const [visible, setVisible] = useState(false);\n\n    function toggleVisible(){\n\n        const scrolled = document.documentElement.scrollTop;\n        if(scrolled > 300)\n        {\n            setVisible(true);\n        }\n        else if(scrolled<=300)\n        {\n            setVisible(false);\n        }\n\n    };\n\n    function scrollToTop() {\n\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n\n    };\n\n    window.addEventListener('scroll',toggleVisible);\n\n    return (\n        <button className=\"arrow-up\">\n          <FaArrowCircleUp onClick={scrollToTop}\n          style={{display: visible ? 'inline' : 'none'}} />  \n        </button>\n    )\n}\n\nexport default ScrollButton;\n","import {auth,db } from '../firebase_config.js';\nimport firebase from 'firebase';\nimport React, { useState } from 'react';\n\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\n  export default function Login() {\n\n    const [error, setError] = useState(null);\n\n const signInWithGoogle = () => {\n  \n  auth.signInWithPopup(googleProvider).then((res) => {\n    var user = res.user;\n    console.log(res.user)\n    db.collection(\"userInfo\").doc(user.uid).set({\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      email: user.email,\n      uid: user.uid,\n    });\n    setError(null);\n  })\n  .catch((err) => {\n    setError(err);\n    console.log(error)\n  })\n}\n    return (\n        <div className=\"login-buttons\">\n          <button className=\"login-provider-button\" onClick={signInWithGoogle}>\n          \n          <span> Continue with Google to upload your pictures</span>\n         </button>\n        </div>\n    );\n  }\n\n ","import React from 'react'\nimport Login from './Login';\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {auth} from '../firebase_config';\nimport { Grid } from '@material-ui/core'\n\n\n\nconst Title = () => {\n\n    const [user]=useAuthState(auth)\n\n    const signOut = async () => {\n    await auth.signOut();\n     };\n\n    \n\n    return (\n        <div>\n        <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid>\n                <h1 style={{letterSpacing: \"3px\", }}>  \n                 <span style={{color: \" #596854 \" , fontWeight: \"bolder\" }}>a.</span>\n                <span style={{color: \" #7F803E \" , fontWeight: \"bolder\" }}>e.</span>\n                <span style={{color: \" #CC9A52 \" , fontWeight: \"bolder\" }}>s.</span>\n                <span style={{color: \" #AD794B \" , fontWeight: \"bolder\" }}>t.</span>\n                <span style={{color: \" #f8c96c\" , fontWeight: \"bolder\" }}>h.</span>\n                <span style={{color: \" #596854 \" , fontWeight: \"bolder\" }}>e.</span>\n                <span style={{color: \" #7F803E \" , fontWeight: \"bolder\" }}>t.</span>\n                <span style={{color: \" #CC9A52 \" , fontWeight: \"bolder\" }}>i.</span>\n                <span style={{color: \" #AD794B \" , fontWeight: \"bolder\" }}>c</span> \n                </h1>\n            </Grid>    \n            <Grid>\n                {user ? <button onClick={signOut}\n                 className=\"login-provider-button\"\n                >LogOut</button> : <Login/> }\n            </Grid>\n        </Grid>\n\n\n       <h1>\n       <h2 style={{letterSpacing: \"3px\", textAlign: \"center\" , color: \" #596854 \", marginBottom: \" 0rem \", marginTop: \"1rem\"}}>Gallery</h2>\n       {user && <p style={{letterSpacing: \"3px\", textAlign: \"center\" , fontSize: \"smaller\" , marginTop: \"0rem\"}} > Upload your pictures here </p>}\n       </h1>\n        \n        \n        </div>\n    )\n}\n\nexport default Title;\n   \n","import { galleryStorage, db, timestamp } from '../firebase_config';\nimport {useState , useEffect} from 'react';\n\nconst useStorage = (uploadedInput) => {\n\nconst  [progress, setProgress] = useState(0);\nconst  [error, setError] = useState(null);\nconst  [url , setUrl] = useState(null);\n\nuseEffect(() => {\n    \n    const storageRef = galleryStorage.ref(uploadedInput.name);\n    const collectionRef = db.collection(\"images\");\n\n    storageRef.put(uploadedInput).on('state_changed',(snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n    },\n    (err) => {\n        setError(err);\n    },\n    async () => {\n        const url = await storageRef.getDownloadURL();\n        const createdAt = timestamp();\n        collectionRef.add({url,createdAt})\n        setUrl(url);\n    })\n\n}, [uploadedInput]);\n\n    return { progress, url, error}\n\n}\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport {motion} from 'framer-motion';\n\nconst ProgressBar = ({ uploadedInput ,setUploadedInput }) => {\n\n    const {url,progress} = useStorage(uploadedInput);\n\n    useEffect(() => {\n\n        if(url){\n            setUploadedInput(null);\n        }\n\n    },[url,setUploadedInput])\n\n    return (\n         <motion.div className=\"progress-bar\" \n         initial={{width: 0 }}\n         animate={{width: progress + '%' }}\n         > </motion.div>\n    )\n}\n\n\nexport default ProgressBar;","import React,{useState} from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm =  () => {\n   \n    const [uploadedInput, setUploadedInput] = useState(null);\n    const [error , setError ] = useState(null);\n    const typeOfFilesAccepted =['image/png','image/jpeg'];\n\n    function uploadHandler(event){\n \n        let selected =  event.target.files[0];\n        \n        if(selected && typeOfFilesAccepted.includes(selected.type))\n        {\n            \n                setUploadedInput(selected);\n                setError('');\n            \n        }\n        else{\n            setUploadedInput(null);\n            setError('Please select an image file (png or jpeg)');\n\n        }\n    }\n\n    return (\n        <form>\n        <label>\n        <input  id = \"hide\" type=\"file\" onChange={uploadHandler} />\n        <span>➕</span>\n        </label>\n        <div style={{letterSpacing:\"2px\"}}>\n        <div style = {{color: \"red\",textAlign: \"center\" }}>\n                {error}\n        </div>\n        {uploadedInput && <div>{uploadedInput.name}</div> }\n        {uploadedInput && <ProgressBar uploadedInput={uploadedInput} setUploadedInput={setUploadedInput} />}\n        </div>\n        \n        </form>\n        \n    )\n}\n\nexport default  UploadForm;\n   \n","export const lightTheme = {\n    body: 'white',\n    text: '#363537',\n    toggleBorder: '#AD794B',\n    background: 'transparent',\n    \n  }\n  \n  export const darkTheme = {\n    body: 'black',\n    text: '#FAFAFA',\n    toggleBorder: '#AD794B',\n    background: 'transparent',\n  }","import { createGlobalStyle} from \"styled-components\";\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    \n    transition: all 0.50s linear;\n  }\n  `","import React from 'react'\nimport { func, string } from 'prop-types';\nimport styled from \"styled-components\"\nconst Button = styled.button`\n  background: ${({ theme }) => theme.background};\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\n  color: ${({ theme }) => theme.text};\n  border-radius: 30px;\n  cursor: pointer;\n  font-size:0.8rem;\n  padding: 0.6rem;\n  margin-top:1rem;\n  font-size: x-large;\n  \n   \n`;\nconst Toggle = ({theme,  toggleTheme }) => {\n    return (\n     \n        <Button  onClick={toggleTheme} >\n         { theme === 'light' ?  \"🌙\" : \"🌞\" }\n        </Button>\n       \n    );\n};\nToggle.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired,\n}\nexport default Toggle;\n","import React , {useState, Fragment} from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport './App.css';\nimport Delete from './comps/Delete';\nimport ImgeGrid from './comps/ImgeGrid';\nimport Modal from './comps/Modal';\nimport ScrollButton from './comps/ScrollButton';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport { lightTheme, darkTheme } from './comps/DarkMode/theme';\nimport { GlobalStyles } from './comps/DarkMode/GlobalStyles';\nimport  {useDarkMode} from \"./hooks/useDarkMode\"\nimport Toggle from './comps/DarkMode/Toggle';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from './firebase_config';\n\nfunction App() {\n\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [docId , setDocId] =useState(null);\n  const [delUrl, setDelUrl] = useState(null);\n  const [user] = useAuthState(auth)\n\n \n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n\n  if(!mountedComponent) return <div/>\n  return (\n   \n    <div className=\"App\">\n\n    <ThemeProvider theme={themeMode} >\n    <GlobalStyles/>\n\n    <Fragment>\n        \n        <Toggle  theme={theme} toggleTheme={themeToggler} /> \n       \n        <Title/>\n        \n        {user && <UploadForm/>}\n        <ImgeGrid setSelectedImage={setSelectedImage} setDocId={setDocId} setDelUrl={setDelUrl} />\n        {selectedImage && <Modal selectedImage={selectedImage} setSelectedImage={setSelectedImage}/> }\n        {docId && delUrl && <Delete docId={docId} setDocId={setDocId} delUrl={delUrl} setDelUrl={setDelUrl} /> }\n        <ScrollButton/>\n\n    </Fragment>\n    </ThemeProvider>\n     \n    </div>\n    \n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n    const [mountedComponent, setMountedComponent] = useState(false)\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme)\n        setMountedComponent(true)\n    }, []);\n    return [theme, themeToggler, mountedComponent]\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}